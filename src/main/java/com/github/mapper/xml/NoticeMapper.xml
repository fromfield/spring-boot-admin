<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.mapper.NoticeMapper">
    <resultMap id="BaseResultMap" type="com.github.model.Notice">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="publish_time" property="publishTime" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="CHAR"/>
        <result column="create_time" property="createTime" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="createUserId" jdbcType="INTEGER"/>
        <result column="modify_time" property="modifyTime" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result column="modify_user_id" property="modifyUserId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="NoticeExtendMap" type="com.github.model.extend.NoticeExtend">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="publish_time" property="publishTime" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="CHAR"/>
        <result column="create_time" property="createTime" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="createUserId" jdbcType="INTEGER"/>
        <result column="modify_time" property="modifyTime" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP"/>
        <result column="modify_user_id" property="modifyUserId" jdbcType="INTEGER"/>
        <result column="org_id" property="fid" jdbcType="INTEGER"/>
        <result column="type_title" property="typeTitle" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.github.model.Notice" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, type_id, title, author, publish_time, `status`, create_time, create_user_id,content,
    modify_time, modify_user_id
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_notice
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.github.model.Notice">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_notice (type_id, title, author,
        publish_time, `status`, create_time,
        create_user_id, modify_time, modify_user_id,
        content)
        values (#{typeId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
        #{publishTime,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{createUserId,jdbcType=INTEGER}, #{modifyTime,jdbcType=TIMESTAMP}, #{modifyUserId,jdbcType=INTEGER},
        #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.github.model.Notice">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeId != null">
                type_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="publishTime != null">
                publish_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="modifyUserId != null">
                modify_user_id,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="publishTime != null">
                #{publishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyUserId != null">
                #{modifyUserId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.model.Notice">
        update t_notice
        <set>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="publishTime != null">
                publish_time = #{publishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.github.model.Notice">
    update t_notice
    set type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.github.model.Notice">
    update t_notice
    set type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      content = #{content}
    where id = #{id,jdbcType=INTEGER}
  </update>





    <select id="getList" parameterType="com.github.model.extend.NoticeExtend" resultMap="NoticeExtendMap">
    SELECT n.*,nt.org_id as fid,nt.title as type_title FROM t_notice as n left JOIN t_notice_type as nt on n.type_id=nt.id
    WHERE
        TRUE
        <if test="typeId != null">
           AND n.type_id = #{typeId}
        </if>
        <if test="title != null">
          AND n.title LIKE '%${title}%'
        </if>
        <if test="author != null">
           AND n.author = #{author}
        </if>
        <if test="publishTime != null">
           AND n.publish_time = #{publishTime}
        </if>
        <if test="status != null">
           AND n.`status` = #{status}
        </if>
        <if test="createTime != null">
           AND n.create_time = #{createTime}
        </if>
        <if test="createUserId != null">
           AND n.create_user_id = #{createUserId}
        </if>
        <if test="modifyTime != null">
           AND n.modify_time = #{modifyTime}
        </if>
        <if test="modifyUserId != null">
            modify_user_id = #{modifyUserId}
        </if>
        <if test="content != null">
           AND n.content LIKE '%${content}%'
        </if>
        <if test="fid != null">
            AND nt.org_id = #{fid}
        </if>

  </select>


</mapper>