<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.mapper.NoticeTypeMapper" >
  <resultMap id="BaseResultMap" type="com.github.model.NoticeType" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="external_id" property="externalId" jdbcType="VARCHAR" />
    <result column="private_flag" property="privateFlag" jdbcType="CHAR" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="modify_user_id" property="modifyUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, external_id, private_flag, org_id, `status`, create_time, create_user_id, 
    modify_time, modify_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_notice_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_notice_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.model.NoticeType" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_notice_type (title, external_id, private_flag, 
      org_id, `status`, create_time, 
      create_user_id, modify_time, modify_user_id
      )
    values (#{title,jdbcType=VARCHAR}, #{externalId,jdbcType=VARCHAR}, #{privateFlag,jdbcType=CHAR}, 
      #{orgId,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{modifyTime,jdbcType=TIMESTAMP}, #{modifyUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.model.NoticeType" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_notice_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        title,
      </if>
      <if test="externalId != null" >
        external_id,
      </if>
      <if test="privateFlag != null" >
        private_flag,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="modifyUserId != null" >
        modify_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null" >
        #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="privateFlag != null" >
        #{privateFlag,jdbcType=CHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        #{modifyUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.model.NoticeType" >
    update t_notice_type
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="externalId != null" >
        external_id = #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="privateFlag != null" >
        private_flag = #{privateFlag,jdbcType=CHAR},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.model.NoticeType" >
    update t_notice_type
    set title = #{title,jdbcType=VARCHAR},
      external_id = #{externalId,jdbcType=VARCHAR},
      private_flag = #{privateFlag,jdbcType=CHAR},
      org_id = #{orgId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      modify_user_id = #{modifyUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getList" parameterType="com.github.model.NoticeType" resultType="java.util.HashMap">
  SELECT nt.*,oe.fname FROM t_notice_type as nt LEFT JOIN t_organization_extend as oe ON nt.org_id=oe.fid
  <where>
    TRUE
    <if test="title != null and title != ''">
      AND nt.title LIKE '%${title}%'
    </if>
    <if test="externalId != null" >
      AND nt.external_id = #{externalId}
    </if>
    <if test="privateFlag != null" >
      AND nt.private_flag = #{privateFlag}
    </if>
    <if test="orgId != null" >
      AND nt.org_id = #{orgId}
    </if>
    <if test="status != null" >
      AND nt.`status` = #{status}
    </if>
    <if test="createTime != null" >
      AND nt.create_time = #{createTime}
    </if>
    <if test="createUserId != null" >
      AND nt.create_user_id = #{createUserId}
    </if>
    <if test="modifyTime != null" >
      AND nt.modify_time = #{modifyTime}
    </if>
    <if test="modifyUserId != null" >
      AND nt.modify_user_id = #{modifyUserId}
    </if>

  </where>
  ORDER BY id DESC
</select>


</mapper>